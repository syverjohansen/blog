The goal is to make models for predicting individual races.  The process will be

0. Data setup
1. EDA
2. Model type
3. Choosing best model for model type
	Big for loop and also dealing with multicollinearity
4. Look into how things like experience and what race of the season it is affects results
	Find the right value modeling lag and previous points
5. Try to model +/- for individual skiers


0. Data setup.
We start out by setting up our data.  We want to model points from World Cups, so we will pull the same function that we had in the Season Predictions post to allocate points.  We can also take in Olympics and World Championships and all stage races since we aren't concerned about the final season total, but are interested in individual races.

We also will take data from the last 10 seasons instead of the last 5.  This is because we will be modeling for individual type of races (Sprint Classic, Sprint Freestyle, Distance Freestyle, Distance Classic, and Distance), so I hypothesize the sample size of races is more important than the recency of it up to a point, although that can be tested for.

We also will filter out team sprints and relays, as they are not indicitave of individual race results.

The last thing we do is set up percentages for each race so the top person in the race for each elo gets 1%, someone with an elo at 90% of them gets .9, etc.  To accept NAs, we will impute the first inner quartile for each Elo column with the first inner quartile, making the assumption that those who have not raced in an event are probably below average.


1. EDA
We need to start out with a type of race, let's choose Distance Classic as our example here.  Let's see how it matches up to each of the percent pelos, age, and exp.

Starting with the plot for Distance Classic Elo Percentage, it looks like a fairly normal distribution with a center around .75.  It is definitely skewed a bit right, but nothing too crazy.  Skewness and kurtosis data comes back as normal.

For wc_points, we see what kind of form it takes.  This may be comes useful if we try to linearlize the data for linear regression.  It turns out it is closest to points^.51 for linear, but it doesn't really make a difference in linear models it seems

For the points, we see that the skew is hard right

2. Simple modeling
For our 10 model types, let's line up Points vs Distance Classic Pelo and see if any of them are better than the others.

It's too hard to tell from this, however, I think that log and linear are probably bad for predicting points in races.  The rest are too close to tell


3. Residuals and custom R2
Like the season preview, we are interested in residuals and a custom R2 to see if some models are better than other.